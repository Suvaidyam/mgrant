[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Validate",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-25 17:19:24.834858",
  "module": "Mgrant",
  "name": "Timeline",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Version",
  "script": "response = frappe.get_all(\n    'DocField',\n    filters={'options': 'Proposal'},\n    fields=['parent', 'fieldname']\n)\ndts = [res['parent'] for res in response]\n\nif doc.ref_doctype in dts:\n    for el in response:\n        if el['parent'] == doc.ref_doctype:\n            curr_doc = frappe.get_doc(doc.ref_doctype, doc.docname)\n            if curr_doc.get(el['fieldname']):\n                doc.custom_actual_doctype = doc.ref_doctype\n                doc.custom_actual_document_name = doc.docname\n                doc.ref_doctype = 'Proposal'\n                doc.docname = curr_doc.get(el['fieldname'])\n                \nresponse = frappe.get_all(\n    'DocField',\n    filters={'options': 'Grant'},\n    fields=['parent', 'fieldname']\n)\n\ndts = [res['parent'] for res in response]\n\nif doc.ref_doctype in dts:\n    for el in response:\n        if el['parent'] == doc.ref_doctype:\n            curr_doc = frappe.get_doc(doc.ref_doctype, doc.docname)\n            if curr_doc.get(el['fieldname']):\n                doc.custom_actual_doctype = doc.ref_doctype\n                doc.custom_actual_document_name = doc.docname\n                doc.ref_doctype = 'Grant'\n                doc.docname = curr_doc.get(el['fieldname'])",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "Weekly",
  "modified": "2025-02-11 16:52:36.982231",
  "module": null,
  "name": "Task",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "ToDo",
  "script": "\nif doc.custom_start_date and doc.date:\n    if frappe.utils.getdate(doc.custom_start_date) > frappe.utils.getdate(doc.date):\n        frappe.throw(\"Due Date should always be greater than Start Date\")\n\n\n# Compare with the current date\nif frappe.utils.getdate(doc.date) < frappe.utils.getdate(frappe.utils.today()):\n    doc.custom_task_status = 'Delayed'\n    frappe.msgprint('Task status has been changed to Delayed as the due date has passed.');",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-02-12 13:41:46.417639",
  "module": "mGrant - Proposal",
  "name": "Application",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Workflow",
  "script": "if doc.document_type == \"Proposal\":\n    grant_settings = frappe.get_doc(\"mGrant Settings\")\n    kanban_board = frappe.get_doc(\"Kanban Board\", {'reference_doctype': \"Proposal\", \"field_name\": \"stage\"})\n    grant_settings.proposal_stages = []\n    kanban_board.columns = []\n    for state in doc.states:\n        try:\n            closure_value = state.custom_closure\n        except AttributeError:\n            pass \n        grant_settings.append(\"proposal_stages\", {\n            \"stage\": state.state,\n            \"closure\": closure_value\n        })\n        kanban_board.append(\"columns\", {\n            \"column_name\": state.state,\n            \"status\": \"Active\",\n            \"indicator\": \"Gray\"\n        })\n    grant_settings.save(ignore_permissions=True)\n    kanban_board.save(ignore_permissions=True)\n",
  "script_type": "DocType Event"
 }
]